from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import CommandStart, CommandHelp

from loader import dp
from states.registrations import Registrations



@dp.message_handler(content_types=['photo'])
async def ask_desk (message: types.Message):
    print(message.photo[-1].file_id)




@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
                         f"–ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ üëâüèº /form")


@dp.message_handler(CommandHelp())
async def bot_help(message: types.Message):
    text = ("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ",
            "/start - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥",
            "/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É")

    await message.answer("\n".join(text))


@dp.message_handler(commands='form', state=None)
async def start_form(message : types.Message):
    await message.answer('üë§ –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n–ù–∞–ø—Ä–∏–º–µ—Ä: –°–µ—Ä–≥–µ–π –ù–µ–º—á–∏–Ω—Å–∫–∏–π')
    await Registrations.name.set()

@dp.message_handler(state=None)
async def bot_echo(message: types.Message):

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
                         f"–ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ üëâüèº /form")



@dp.message_handler(commands='stop_form', state="*")
async def start_form(message : types.Message, state:FSMContext):
    await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã')
    await state.finish()


# –≠—Ö–æ —Ö–µ–Ω–¥–ª–µ—Ä, –∫—É–¥–∞ –ª–µ—Ç—è—Ç –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
@dp.message_handler(state="*", content_types=types.ContentTypes.ANY)
async def bot_echo_all(message: types.Message, state: FSMContext):
    # state = await state.get_state()
    # await message.answer(f"–≠—Ö–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ <code>{state}</code>.\n"
    #                      f"\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n"
    #                      f"<code>{message}</code>")
    await message.answer('–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã üëâüèº/stop_form')
